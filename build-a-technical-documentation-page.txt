** start of undefined **

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 <title>Technical Doc</title>
 <link href="styles.css" rel="stylesheet">
</head>
<body>
  <nav id="navbar">
      <header>HTML</header>
      <ul>
        <li><a class="nav-link" href="#introduction">Introduction</a></li>
        <li><a class="nav-link" href="#prerequisites">Prerequisites</a></li>
        <li><a class="nav-link" href="#html_language">HTML Language</a></li>
        <li><a class="nav-link" href="#get_started">Get Started</a></li>
        <li><a class="nav-link" href="#must_know">Must Know</a></li>
    </nav>
  <main id="main-doc">
    
    <section class="main-section" id="introduction">
     <header>
       <h1 class="header">Introduction</h1>
       </header>
      <p>At its heart, HTML is a language made up of elements, which can be applied to pieces of text to give them different meaning in a document (Is it a paragraph? Is it a bulleted list? Is it part of a table?), structure a document into logical sections (Does it have a header? Three columns of content? A navigation menu?), and embed content such as images and videos into a page. </p>
  <h4>What will you learn here</h4>
      <p>This module will introduce the first two of these and introduce fundamental concepts and syntax you need to know to understand HTML.</p>
    </section>

    <section class="main-section" id="prerequisites">
      <header><h1 class="header">Prerequisites</h1></header>
      <p>Before starting this module, you don't need any previous HTML knowledge, but you should have at least basic familiarity with using computers and using the web passively (i.e., just looking at it and consuming content).</p>
      <p>You should have a basic work environment set up (as detailed in Installing basic software), and understand how to create and manage files (as detailed in Dealing with files).</p>
      <p> Now let's undertand what is HTML and it's basic structure</p>
    </section>

    <section class="main-section" id="html_language">
     <header> <h1 class="header">HTML Language</h1></header>
      <p>HTML (HyperText Markup Language) is a markup language that tells web browsers how to structure the web pages you visit.</p>
      <p> It can be as complicated or as simple as the web developer wants it to be.</p>
      <p> HTML consists of a series of elements, which you use to enclose, wrap, or mark up different parts of content to make it appear or act in a certain way.</p>
      <ul>Anatomy of an HTML element:
        <li>The opening tag</li>
        <li>The content</li>
        <li>The closing tag</li>
      </ul>Example code:
        <pre><code> &lt;h1&gt;Hello World&lt;/h1&gt;</code></pre>
    </section>

    <section class="main-section" id="get_started">
      <header><h1 class="header">Get Started</h1></header>
      <h4>Nesting elements</h4><p>
Elements can be placed within other elements. This is called nesting.</p> 
<p>If we wanted to state that our cat is very grumpy, we could wrap the word very in a "&lt;strong&gt;" element, which means that the word is to have <strong>strong(er)</strong> text formatting</p>
<code>&lt;ul&gt; 
    &lt;li&gt;Item 1&lt;/li&gt; 
    &lt;li&gt;Item 2&lt;/li&gt; 
    &lt;li&gt;Item 3&lt;/li&gt; 
&lt;/ul&gt;</code>
<h4>Void Elements</h4>
<p>Not all elements follow the pattern of an opening tag, content, and a closing tag. Some elements consist of a single tag, which is typically used to insert/embed something in the document. Such elements are called void elements. For example, the <img> element embeds an image file onto a page</p>

<code>&lt;img src="example.jpg" alt="Example Image" /&gt;</code>
    </section>

    <section class="main-section" id="must_know">
      <header><h1 class="header">Must Know</h1></header>
      <h4>Attributes</h4>
      <p>Attributes contain extra information about the element that won't appear in the content. In this example, the class attribute is an identifying name used to target the element with style information.</p>
      <p>Example: <br/>
        <code>
    &lt;p class="cat"&gt;My cat is cute&lt;/p&gt;
    </code>
      </p>
      An attribute should have:
      <ul>
        <li>A space between it and the element name. (For an element with more than one attribute, the attributes should be separated by spaces too.)</li>
<li>The attribute name, followed by an equal sign.</li>
<li>An attribute value, wrapped with opening and closing quote marks.</li>
      </ul>
      <code>
    &lt;p class="cat"&gt;My cat is cute&lt;/p&gt;
    </code>
    </section>
<p>Learn more <a href="#">here</a></p>
  </main>
</body

** end of undefined **

** start of undefined **

html{
  font-family: Arial, 'sans-serif'; 
}
#navbar header{
  margin: 0;
  font-size:20px;
  font-weight:600;
}
#navbar{
 float:left;
 width: 100px;
 height: auto;
 position:fixed;
 display:flex;
 flex-direction:column;
}
#navbar ul{
  list-style:none;
  padding-left:0;
  margin:1rem auto;
}
#navbar ul li{
  border-bottom: 2px solid rgb(0, 0, 0, 0.3);
  margin-bottom: 20px;
  text-align:flex-start;
}
#navbar li a{
  text-decoration:none;
  color: #000; 
}
#navbar li:hover{
  background: lightgrey;
  transition: all 0.5s ease-in-out;
}
@media (max-width:800px){
  #navbar header{
    text-align:center;
    margin-top:5px;
    padding-bottom:0
  }
  #navbar{
    /*width: 100%;
    height: auto;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 999;*/
    width:100%;
    height: auto;
    position:absolute;
    top:0;
    left:0;
    z-index:999;
    /*background-color: navy;
    color:white;*/
  }
  #navbar ul {
    display: flex;
    margin:0;
    padding:0;
  }
  #navbar > ul > li{
    justify-content: space-between;
    display: inline;
    text-align:center;
    padding: 0.4rem 0.8rem;
    width:100%;
  }
  /*#navbar ul li a{
    color:white;
  }*/
#main-doc{
  position: absolute;
    top: 80px; 
    left: 0; 
    display: inline-block;
    z-index:1;
  }
}
#main-doc{
  margin-left:10;
  margin-top:20px;
  position:relative;
}
#main-doc section{
  margin-left:0;
}
main code{
  box-sizing:border-box;
  width:100px;
  height:100px;
  border:1px solid black;
  background-color: lightgrey;
}

** end of undefined **

